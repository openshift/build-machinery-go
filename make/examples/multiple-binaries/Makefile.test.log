make build SOURCE_GIT_TAG=v42.43.44 SOURCE_GIT_COMMIT=aaa SOURCE_GIT_TREE_STATE=clean
go build -trimpath -ldflags "-X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.versionFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.commitFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.gitTreeState="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.buildDate="<redacted_for_diff>" -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" github.com/openshift/build-machinery-go/make/examples/multiple-binaries/cmd/oc
go build -trimpath -ldflags "-X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.versionFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.commitFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.gitTreeState="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.buildDate="<redacted_for_diff>" -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" github.com/openshift/build-machinery-go/make/examples/multiple-binaries/cmd/openshift
[[ -f ./openshift ]]
[[ -f ./oc ]]
# test version is set correctly when linking
#   majorFromGit, minorFromGit are deprecated upstream and set to empty value
#   we avoid comparing time to avoid flakes
diff <( ./oc | sed '$d' ) <( \
	echo '' && \
	echo '' && \
	echo 'aaa' && \
	echo 'v42.43.44' && \
	echo 'clean' \
)
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -f ./openshift ]]
[[ ! -f ./oc ]]
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -d ./_output/ ]] || (ls -l ./_output/ && false)
make cross-build SOURCE_GIT_TAG=v42.43.44 SOURCE_GIT_COMMIT=aaa SOURCE_GIT_TREE_STATE=clean
mkdir -p '_output/bin/darwin_amd64'
go build -trimpath -ldflags "-X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.versionFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.commitFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.gitTreeState="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.buildDate="<redacted_for_diff>" -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" -o '_output/bin/darwin_amd64/oc' github.com/openshift/build-machinery-go/make/examples/multiple-binaries/cmd/oc
mkdir -p '_output/bin/darwin_amd64'
go build -trimpath -ldflags "-X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.versionFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.commitFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.gitTreeState="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.buildDate="<redacted_for_diff>" -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" -o '_output/bin/darwin_amd64/openshift' github.com/openshift/build-machinery-go/make/examples/multiple-binaries/cmd/openshift
mkdir -p '_output/bin/windows_amd64'
go build -trimpath -ldflags "-X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.versionFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.commitFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.gitTreeState="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.buildDate="<redacted_for_diff>" -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" -o '_output/bin/windows_amd64/oc.exe' github.com/openshift/build-machinery-go/make/examples/multiple-binaries/cmd/oc
mkdir -p '_output/bin/windows_amd64'
go build -trimpath -ldflags "-X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.versionFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.commitFromGit="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.gitTreeState="<redacted_for_diff>" -X github.com/openshift/build-machinery-go/make/examples/multiple-binaries/pkg/version.buildDate="<redacted_for_diff>" -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" -o '_output/bin/windows_amd64/openshift.exe' github.com/openshift/build-machinery-go/make/examples/multiple-binaries/cmd/openshift
[[ ! -f ./openshift ]]
[[ ! -f ./oc ]]
[[ -f ./_output/bin/darwin_amd64/openshift ]]
[[ -f ./_output/bin/darwin_amd64/oc ]]
[[ -f ./_output/bin/windows_amd64/openshift.exe ]]
[[ -f ./_output/bin/windows_amd64/oc.exe ]]
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -d ./_output/ ]] || (ls -l ./_output/ && false)
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -d ./_output/ ]] || (ls -l ./_output/ && false)
make rpm-build SOURCE_GIT_TAG=v42.43.44 SOURCE_GIT_COMMIT=aaa SOURCE_GIT_TREE_STATE=clean
rpmbuild -ba --define "_topdir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries" --define "_builddir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries" --define "_buildrootdir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries" --define "_rpmdir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms" --define "_srcrpmdir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms" --define "_specdir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries" --define "_sourcedir /github.com/openshift/build-machinery-go/make/examples/multiple-binaries" --define "go_package github.com/openshift/build-machinery-go/make/examples/multiple-binaries" --quiet --define 'version 2.42.0' --define 'dist .el7' --define 'release 6' ocp.spec
[[ -f ./_output/rpms/x86_64/openshift-2.42.0-6.el7.x86_64.rpm ]]
[[ -f ./_output/srpms/openshift-2.42.0-6.el7.src.rpm ]]
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -d ./_output/ ]] || (ls -l ./_output/ && false)
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
cp -r ./testing/manifests/initial/* ./manifests/
diff -Naup ./testing/manifests/initial/ ./manifests/
! make verify-codegen-crds
Installing controller-gen into '_output/tools/bin/controller-gen-v0.6.0'
mkdir -p '_output/tools/bin/'
curl -s -f -L https://github.com/openshift/kubernetes-sigs-controller-tools/releases/download/v0.6.0/controller-gen-linux-amd64 -o '_output/tools/bin/controller-gen-v0.6.0'
chmod +x '_output/tools/bin/controller-gen-v0.6.0';
Installing yq into '_output/tools/bin/yq-2.4.0'
mkdir -p '_output/tools/bin/'
curl -s -f -L https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64 -o '_output/tools/bin/yq-2.4.0'
chmod +x '_output/tools/bin/yq-2.4.0';
Installing yaml-patch into '_output/tools/bin/yaml-patch-v0.0.11'
mkdir -p '_output/tools/bin/'
curl -s -f -L https://github.com/pivotal-cf/yaml-patch/releases/download/v0.0.11/yaml_patch_linux -o '_output/tools/bin/yaml-patch-v0.0.11'
chmod +x '_output/tools/bin/yaml-patch-v0.0.11';
--- ./manifests/operator.openshift.io_myotheroperatorresources.crd.yaml
@@ -9,6 +9,40 @@ spec:
     kind: MyOtherOperatorResource
     plural: myotheroperatorresources
   scope: ""
+  validation:
+    openAPIV3Schema:
+      description: MyOtherOperatorResource is an example operator configuration type
+      properties:
+        apiVersion:
+          description: 'APIVersion defines the versioned schema of this representation
+            of an object. Servers should convert recognized schemas to the latest
+            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          type: string
+        kind:
+          description: 'Kind is a string value representing the REST resource this
+            object represents. Servers may infer this from the endpoint the client
+            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          type: string
+        metadata:
+          type: object
+        spec:
+          properties:
+            deprecatedField:
+              type: string
+            name:
+              type: string
+            overwritePattern:
+              pattern: ^(Managed|Unmanaged)$
+              type: string
+          required:
+          - deprecatedField
+          - name
+          - overwritePattern
+          type: object
+      required:
+      - metadata
+      - spec
+      type: object
   version: v1beta1
   versions:
   - name: v1beta1
make[2]: *** [verify-codegen-crds-manifests] Error 1
make update-codegen-crds
Using existing controller-gen from "_output/tools/bin/controller-gen-v0.6.0"
Using existing yq from "_output/tools/bin/yq-2.4.0"
Using existing yaml-patch from "_output/tools/bin/yaml-patch-v0.0.11"
'_output/tools/bin/controller-gen-v0.6.0' schemapatch:manifests="./manifests" paths="./pkg/apis/v1;./pkg/apis/v1beta1" output:dir="./manifests"
_output/tools/bin/yq-2.4.0 m -i -x './manifests/operator.openshift.io_myotheroperatorresources.crd.yaml' './manifests/operator.openshift.io_myotheroperatorresources.crd.yaml-merge-patch'
_output/tools/bin/yq-2.4.0 m -i -x './manifests/operator.openshift.io_myoperatorresources.crd.yaml' './manifests/operator.openshift.io_myoperatorresources.crd.yaml-merge-patch'
_output/tools/bin/yaml-patch-v0.0.11 -o './manifests/operator.openshift.io_myv1resources.crd.yaml-patch' < './manifests/operator.openshift.io_myv1resources.crd.yaml' > './manifests/operator.openshift.io_myv1resources.crd.yaml.patched'
mv './manifests/operator.openshift.io_myv1resources.crd.yaml.patched' './manifests/operator.openshift.io_myv1resources.crd.yaml'
make verify-codegen-crds
Using existing controller-gen from "_output/tools/bin/controller-gen-v0.6.0"
Using existing yq from "_output/tools/bin/yq-2.4.0"
Using existing yaml-patch from "_output/tools/bin/yaml-patch-v0.0.11"
cp -r ./testing/manifests/initial/*.crd.yaml{-merge-patch,-patch} ./manifests/
! diff -Naup ./testing/manifests/initial/ ./manifests/ 2>/dev/null 1>&2
diff -Naup ./testing/manifests/updated/ ./manifests/
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -d ./_output/ ]] || (ls -l ./_output/ && false)
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f ./profile-manifests-1/* ./profile-manifests-2/*
cp ./testing/profile-manifests/initial/* ./profile-manifests-1/
cp ./testing/profile-manifests/initial/* ./profile-manifests-2/
! make verify-profile-manifests
Installing yq into '_output/tools/bin/yq-2.4.0'
mkdir -p '_output/tools/bin/'
curl -s -f -L https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64 -o '_output/tools/bin/yq-2.4.0'
chmod +x '_output/tools/bin/yq-2.4.0';
Installing yaml-patch into '_output/tools/bin/yaml-patch-v0.0.11'
mkdir -p '_output/tools/bin/'
curl -s -f -L https://github.com/pivotal-cf/yaml-patch/releases/download/v0.0.11/yaml_patch_linux -o '_output/tools/bin/yaml-patch-v0.0.11'
chmod +x '_output/tools/bin/yaml-patch-v0.0.11';
--- ./profile-manifests-1/operator.deployment-profile1.yaml	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,45 @@
+# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  annotations:
+    cluster-profile: profile1
+  labels:
+    app: my-operator
+  name: my-operator
+  namespace: my-operator
+spec:
+  replicas: 1
+  selector:
+    matchLabels:
+      app: my-operator
+  template:
+    metadata:
+      labels:
+        app: my-operator
+    spec:
+      containers:
+      - args:
+        - --logtostderr
+        - start
+        env:
+        - name: RELEASE_VERSION
+          value: 0.0.1-snapshot
+        image: quay.io/openshift/my-operator:latest
+        name: operator
+        ports:
+        - containerPort: 8443
+          name: https
+        resources:
+          requests:
+            cpu: 100m
+            memory: 1Gi
+        volumeMounts:
+        - mountPath: /config
+          name: config
+      priorityClassName: system-cluster-critical
+      serviceAccountName: operator
+      volumes:
+      - configMap:
+          name: operator-config
+        name: config
--- ./profile-manifests-1/operator.deployment-profile2.yaml	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  annotations:
+    cluster-profile: profile2
+  labels:
+    app: my-operator
+  name: my-operator
+  namespace: my-operator
+spec:
+  replicas: 1
+  selector:
+    matchLabels:
+      app: my-operator
+  template:
+    metadata:
+      labels:
+        app: my-operator
+    spec:
+      containers:
+      - args:
+        - --logtostderr
+        - start
+        env:
+        - name: RELEASE_VERSION
+          value: 0.0.1-snapshot
+        image: quay.io/openshift/my-operator:latest
+        name: operator
+        ports:
+        - containerPort: 8443
+          name: https
+        resources:
+          requests:
+            cpu: 100m
+            memory: 1Gi
+        volumeMounts:
+        - mountPath: /config
+          name: config
+      nodeSelector:
+        node-role.kubernetes.io/master: ""
+      priorityClassName: system-cluster-critical
+      serviceAccountName: operator
+      volumes:
+      - configMap:
+          name: operator-config
+        name: config
--- ./profile-manifests-1/operator.service-profile1.yaml	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,18 @@
+# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***
+apiVersion: v1
+kind: Service
+metadata:
+  annotations:
+    include.release.openshift.io/self-managed-high-availability: "true"
+  labels:
+    app: my-operator
+    cluster-profile: profile1
+  name: my-operator
+  namespace: my-operator
+spec:
+  ports:
+  - name: https
+    port: 8443
+  selector:
+    app: my-operator
+  type: ClusterIP
--- ./profile-manifests-1/operator.service-profile2.yaml	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,18 @@
+# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***
+apiVersion: v1
+kind: Service
+metadata:
+  annotations:
+    include.release.openshift.io/self-managed-high-availability: "true"
+  labels:
+    app: my-operator
+    cluster-profile: profile2
+  name: my-operator
+  namespace: my-operator
+spec:
+  ports:
+  - name: https
+    port: 8443
+  selector:
+    app: my-operator
+  type: ClusterIP
make[2]: *** [verify-profile-manifests-manifests-1] Error 1
make update-profile-manifests
Using existing yq from "_output/tools/bin/yq-2.4.0"
Using existing yaml-patch from "_output/tools/bin/yaml-patch-v0.0.11"
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yaml-patch-v0.0.11 -o './profile-patches-1/profile1/operator.deployment.yaml-patch' < '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.deployment.yaml' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.deployment-profile1.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yaml-patch-v0.0.11 -o './profile-patches-1/profile2/operator.deployment.yaml-patch' < '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.deployment.yaml' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.deployment-profile2.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yq-2.4.0 m -x '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.service.yaml' './profile-patches-1/profile1/operator.service.yaml-merge-patch' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.service-profile1.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yq-2.4.0 m -x '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.service.yaml' './profile-patches-1/profile2/operator.service.yaml-merge-patch' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-1/operator.service-profile2.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yaml-patch-v0.0.11 -o './profile-patches-2/profile-a/operator.deployment.yaml-patch' < '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.deployment.yaml' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.deployment-profile-a.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yaml-patch-v0.0.11 -o './profile-patches-2/profile-b/operator.deployment.yaml-patch' < '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.deployment.yaml' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.deployment-profile-b.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yq-2.4.0 m -x '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.service.yaml' './profile-patches-2/profile-a/operator.service.yaml-merge-patch' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.service-profile-a.yaml'
( echo '# *** AUTOMATICALLY GENERATED FILE - DO NOT EDIT ***'; _output/tools/bin/yq-2.4.0 m -x '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.service.yaml' './profile-patches-2/profile-b/operator.service.yaml-merge-patch' ) > '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/profile-manifests-2/operator.service-profile-b.yaml'
! diff -Naup ./testing/profile-manifests/initial/ ./profile-manifests-1/ &> /dev/null
! diff -Naup ./testing/profile-manifests/initial/ ./profile-manifests-2/ &> /dev/null
diff -Naup ./testing/profile-manifests/updated-1 ./profile-manifests-1/
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
[[ ! -d ./_output/ ]] || (ls -l ./_output/ && false)
make clean
rm -f oc openshift
rm -f -r '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/rpms' '/github.com/openshift/build-machinery-go/make/examples/multiple-binaries/_output/srpms'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
rm -f _output/tools/bin/controller-gen*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yq*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f _output/tools/bin/yaml-patch*
if [ -d '_output/tools/bin/' ]; then rmdir --ignore-fail-on-non-empty -p '_output/tools/bin/'; fi
rm -f -r '_output/bin'
if [ -d '_output' ]; then rmdir --ignore-fail-on-non-empty '_output'; fi
